"""
This type stub file was generated by pyright.
"""

class API:
    """API base class

    Keyword Args:
        base_url (str, optional): the API base url, useful to switch to testnet, etc. By default it's https://api.binance.com
        timeout (int, optional): the time waiting for server response, number of seconds. https://docs.python-requests.org/en/master/user/advanced/#timeouts
        proxies (obj, optional): Dictionary mapping protocol to the URL of the proxy. e.g. {'https': 'http://1.2.3.4:8080'}
        show_limit_usage (bool, optional): whether return limit usage(requests and/or orders). By default, it's False
        show_header (bool, optional): whether return the whole response header. By default, it's False
    """
    def __init__(self, key=..., secret=..., base_url=..., timeout=..., proxies=..., show_limit_usage=..., show_header=..., private_key=..., private_key_passphrase=...) -> None:
        ...
    
    def query(self, url_path, payload=...): # -> dict[Unknown, Unknown] | Any | str:
        ...
    
    def limit_request(self, http_method, url_path, payload=...): # -> dict[Unknown, Unknown] | Any | str:
        """limit request is for those endpoints require API key in the header"""
        ...
    
    def sign_request(self, http_method, url_path, payload=..., special=...): # -> dict[Unknown, Unknown] | Any | str:
        ...
    
    def limited_encoded_sign_request(self, http_method, url_path, payload=...): # -> dict[Unknown, Unknown] | Any | str:
        """This is used for some endpoints has special symbol in the url.
        In some endpoints these symbols should not encoded
        - @
        - [
        - ]

        so we have to append those parameters in the url
        """
        ...
    
    def send_request(self, http_method, url_path, payload=..., special=...): # -> dict[Unknown, Unknown] | Any | str:
        ...
    


